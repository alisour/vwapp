<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VWAPP</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="../assets/stylesheet.css">

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
        integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
        crossorigin="anonymous"></script>
</head>

<body>

    <div class="container">
        <div class="header">
            <h1>Choose From The List!</h1>
            <a href="/" class="btn" class="fa fa-home">HOME</a>

        </div>

        <br>

        <div class="list">

            <div class="dropdown">
                <button onclick="myFunction()" class="dropbtn">VULNERABILITIES</button>
                <div id="myDropdown" class="dropdown-content">

                    <a href="/htmlInjectionReflectedGet" class="vulnerability">HTML Injection - Reflected (GET)</a>

                    <a href="/htmlInjectionStoredBlog" class="vulnerability">HTML Injection - Stored (Blog)</a>

                    <a href="/sqlInjectionSearch" class="vulnerability">Sql Injection - Search (GET)</a>

                    <a href="/sqlInjectionStoredBlog" class="vulnerability">Sql Injection - Stored (Blog)</a>

                    <a href="/brokenAuthenticationWeakPassword" class="vulnerability">Broken Authentication - Weak
                        Password</a>

                    <a href="/base64EncodingSecret" class="vulnerability">Base64 Encoding (Secret)</a>

                    <a href="/sessionManagementAdministrativePortals?admin=0" class="vulnerability">Session Management -
                        Administrative Portals</a>


                    <a href="/crossSiteScriptingReflectedGet" class="vulnerability">Cross-Site Scripting - Reflected
                        (GET)</a>

                    <a href="/crossSiteScriptingStored" class="vulnerability">Cross-Site Scripting - Stored</a>

                    <a href="/crossSiteRequestForgery" class="vulnerability">Cross-Site Request Forgery - Change
                        Password</a>


                    <a href="/unvalidatedDirectsForwards1" class="vulnerability">Unvalidated Directs & Forwards (1)</a>


                    <a href="/directoryTraversalDirectories?document=documents" class="vulnerability">Directory
                        Traversal -
                        Directories</a>

                </div>
            </div>

        </div>
        <br>

        <div class="header">
            <h3>Sql Injection - Search (GET)</h3>
            <h6>hint: Try --> " or 1=1#</h6>
        </div>

        <br>

        <div>
            <table class="table table-dark table-striped">

                </tr>
                <thead>
                    <tr>

                        <td colspan="6">
                            <p>
                            <form action="/sqlInjectionSearch" method="post">
                                <input name="entry" id="entry" size="60" placeholder="Search for a movie name!"
                                    required></input>

                                <button class="btn btn-primary" type="submit" name="blog" value="submit">Submit</button>
                            </form>
                            </p>


                        </td>

                    </tr>
                    <tr>
                        <th>#</th>
                        <th>Title</th>
                        <th>Release</th>
                        <th>Character</th>
                        <th>Genre</th>
                        <th>Imdb</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (message === undefined) {%>
                    <tr>
                        <td colspan="6">
                            <h5><%- error %> </h5>
                        </td>
                    </tr>
                    <% } else{ %>

                    <% for(var i=0; i < message.length; i++) { %>
                    <tr>
                        <td> <%- message[i].id %> </td>
                        <td> <%- message[i].title %> </td>
                        <td> <%- message[i].release_date %> </td>
                        <td> <%- message[i].main_character %> </td>
                        <td> <%- message[i].movie_genre %> </td>
                        <td><a href="<%- message[i].imdb_link %>"><%- message[i].imdb_link %> </a></td>
                    </tr>
                    <% } %>
                    <% } %>
                </tbody>
            </table>



        </div>

        <br>

        <div class="solution">
            <h4>The Solution:</h4>
            <p>The error in this page is actually so simple.
                Because to make this mistake I put extra effort
                at the backend of code. I put the input between a
                double quote at the backend. That makes the
                double quoted sql injection possible. If i added
                the input as it is, then this problem could be solved.
            </p>
        </div>


    </div>

</body>
<script src="../assets/index.js"></script>

</html>